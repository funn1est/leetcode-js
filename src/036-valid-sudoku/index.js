// https://leetcode.com/problems/valid-sudoku/
// https://leetcode-cn.com/problems/valid-sudoku/

/**
 * @param {character[][]} board
 * @return {boolean}
 */
const isValidSudoku = board => {
  const row = [{}, {}, {}, {}, {}, {}, {}, {}, {}];
  const column = [{}, {}, {}, {}, {}, {}, {}, {}, {}];
  const box = [{}, {}, {}, {}, {}, {}, {}, {}, {}];

  for (let i = 0; i < 9; i += 1) {
    for (let j = 0; j < 9; j += 1) {
      const item = board[i][j];
      if (item !== '.') {
        if (!row[i][item]) {
          row[i][item] = 1;
        } else {
          return false;
        }

        if (!column[j][item]) {
          column[j][item] = 1;
        } else {
          return false;
        }

        const boxIndex = Math.floor(i / 3) + 3 * Math.floor(j / 3);
        if (!box[boxIndex][item]) {
          box[boxIndex][item] = 1;
        } else {
          return false;
        }
      }
    }
  }
  return true;
};

console.log(
  isValidSudoku([
    ['5', '3', '.', '.', '7', '.', '.', '.', '.'],
    ['6', '.', '.', '1', '9', '5', '.', '.', '.'],
    ['.', '9', '8', '.', '.', '.', '.', '6', '.'],
    ['8', '.', '.', '.', '6', '.', '.', '.', '3'],
    ['4', '.', '.', '8', '.', '3', '.', '.', '1'],
    ['7', '.', '.', '.', '2', '.', '.', '.', '6'],
    ['.', '6', '.', '.', '.', '.', '2', '8', '.'],
    ['.', '.', '.', '4', '1', '9', '.', '.', '5'],
    ['.', '.', '.', '.', '8', '.', '.', '7', '9'],
  ]),
);

console.log(
  isValidSudoku([
    ['8', '3', '.', '.', '7', '.', '.', '.', '.'],
    ['6', '.', '.', '1', '9', '5', '.', '.', '.'],
    ['.', '9', '8', '.', '.', '.', '.', '6', '.'],
    ['8', '.', '.', '.', '6', '.', '.', '.', '3'],
    ['4', '.', '.', '8', '.', '3', '.', '.', '1'],
    ['7', '.', '.', '.', '2', '.', '.', '.', '6'],
    ['.', '6', '.', '.', '.', '.', '2', '8', '.'],
    ['.', '.', '.', '4', '1', '9', '.', '.', '5'],
    ['.', '.', '.', '.', '8', '.', '.', '7', '9'],
  ]),
);
